{
    "version": 6,
    "include": [
        "clang.json"
    ],
    "configurePresets": [
        {
            "inherits": "base-llvm",
            "name": "linux-nix",
            "displayName": "Linux (Nix)",
            "description": "Generic Linux with the LLVM toolchain - assumes that environment is managed by Nix flakes, can be updated by running manualUpdatePreset in develop shell",
            "cmakeExecutable": "/nix/store/wxix1mydrkn693c7cl69ykk79wbrylfj-cmake-3.29.3/bin/cmake",
            "generator": "Ninja Multi-Config",
            "cacheVariables": {
                "NIX_DEVELOP_PROFILE": ".#devShells.x86_64-linux.s2-dev",
                "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/cmake/toolchains/nix.cmake",
                "CMAKE_C_COMPILER": "/nix/store/w0hkgm4vq8lkmdjx61pvaw86lzzcbgw4-clang-wrapper-18.1.7/bin/clang",
                "CMAKE_CXX_COMPILER": "/nix/store/w0hkgm4vq8lkmdjx61pvaw86lzzcbgw4-clang-wrapper-18.1.7/bin/clang++",
                "CMAKE_MAKE_PROGRAM": "/nix/store/z376yigg9wg0v1y7sif9wmkayv3n6hqz-ninja-1.12.1/bin/ninja"
            },
            "environment": {
                "LD_FALLBACK_PATH": "/usr/lib/x86_64-linux-gnu",
                "QT_PLUGIN_PATH": "/nix/store/4p5yaqq5b7qkkkrjrhgwkqcrc9wbgqw7-qtbase-5.15.14-bin/lib/qt-5.15.14/plugins:/nix/store/jyciar59d6pw66a1h9jahk4ma0g5yd0r-qtdeclarative-5.15.14/lib/qt-5.15.14/plugins"
            },
            "vendor": {
                "qt.io/QtCreator/1.0": {
                    "debugger": {
                        "DisplayName": "LLDB (CMake Preset - Linux Nix)",
                        "Abis": [
                            "x86-linux-generic-elf-64bit"
                        ],
                        "Binary": "/nix/store/x1d5xxkag2ikd104ngifqvcvnqzzc9z6-lldb-18.1.7/bin/lldb",
                        "EngineType": 256,
                        "Version": "18.1.7"
                    }
                }
            },
            "condition": {
                "type": "notMatches",
                "string": "$env{IN_NIX_SHELL}",
                "regex": ".[(A-z)|(a-z)|(0-9)]*"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "all",
            "displayName": "All",
            "description": "Build all targets",
            "configurePreset": "linux-nix",
            "inheritConfigureEnvironment": true
        }
    ]
}
